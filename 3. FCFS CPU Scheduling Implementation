#include <stdio.h>

struct Process {
    int id;         // Process ID
    int burstTime;  // Burst Time
    int waitingTime; // Waiting Time
    int turnaroundTime; // Turnaround Time
};

void findWaitingTime(struct Process proc[], int n) {
   
    proc[0].waitingTime = 0;

    for (int i = 1; i < n; i++) {
        proc[i].waitingTime = proc[i - 1].waitingTime + proc[i - 1].burstTime;
    }
}

void findTurnaroundTime(struct Process proc[], int n) {
    for (int i = 0; i < n; i++) {
        proc[i].turnaroundTime = proc[i].waitingTime + proc[i].burstTime;
    }
}

void findAvgTime(struct Process proc[], int n) {
    int totalWaitingTime = 0, totalTurnaroundTime = 0;

    or (int i = 0; i < n; i++) {
        totalWaitingTime += proc[i].waitingTime;
        totalTurnaroundTime += proc[i].turnaroundTime;
    }

    float avgWaitingTime = (float)totalWaitingTime / n;
    float avgTurnaroundTime = (float)totalTurnaroundTime / n;

   
    printf("\nAverage Waiting Time = %.2f\n", avgWaitingTime);
    printf("Average Turnaround Time = %.2f\n", avgTurnaroundTime);
}

void displayResults(struct Process proc[], int n) {
    printf("\nProcess ID | Burst Time | Waiting Time | Turnaround Time\n");
    printf("------------------------------------------------------------\n");

    for (int i = 0; i < n; i++) {
        printf("%10d | %10d | %12d | %15d\n", proc[i].id, proc[i].burstTime, proc[i].waitingTime, proc[i].turnaroundTime);
    }
}

int main() {
    int n;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    struct Process proc[n];

    for (int i = 0; i < n; i++) {
        proc[i].id = i + 1;  
        printf("Enter burst time for Process %d: ", proc[i].id);
        scanf("%d", &proc[i].burstTime);
    }

    findWaitingTime(proc, n);

    findTurnaroundTime(proc, n);

    displayResults(proc, n);

    findAvgTime(proc, n);

    return 0;
}
