#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define FILE_NAME "employees.dat"

typedef struct {
    int empId;
    char name[50];
    int age;
    float salary;
} Employee;

int main() {
    FILE *file, *tempFile;
    Employee emp;
    int choice, empId, found;

    while (1) {
        printf("\n1. Add Employee\n2. View Employee\n3. Update Employee\n4. List Employees\n5. Delete Employee\n6. Exit\nChoice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:  // Add Employee
                file = fopen(FILE_NAME, "ab");
                if (!file) { printf("Error!"); return 1; }
                printf("Enter ID, Name, Age, Salary: ");
                scanf("%d %s %d %f", &emp.empId, emp.name, &emp.age, &emp.salary);
                fwrite(&emp, sizeof(Employee), 1, file);
                fclose(file);
                break;

            case 2:  // View Employee
                printf("Enter ID: ");
                scanf("%d", &empId);
                file = fopen(FILE_NAME, "rb");
                if (!file) { printf("Error!"); return 1; }
                found = 0;
                while (fread(&emp, sizeof(Employee), 1, file)) {
                    if (emp.empId == empId) {
                        printf("ID: %d, Name: %s, Age: %d, Salary: %.2f\n", emp.empId, emp.name, emp.age, emp.salary);
                        found = 1;
                        break;
                    }
                }
                if (!found) printf("Employee not found\n");
                fclose(file);
                break;

            case 3:  // Update Employee
                printf("Enter ID to update: ");
                scanf("%d", &empId);
                file = fopen(FILE_NAME, "rb+");
                if (!file) { printf("Error!"); return 1; }
                found = 0;
                while (fread(&emp, sizeof(Employee), 1, file)) {
                    if (emp.empId == empId) {
                        printf("Enter new Name, Age, Salary: ");
                        scanf("%s %d %f", emp.name, &emp.age, &emp.salary);
                        fseek(file, -sizeof(Employee), SEEK_CUR);
                        fwrite(&emp, sizeof(Employee), 1, file);
                        found = 1;
                        break;
                    }
                }
                if (!found) printf("Employee not found\n");
                fclose(file);
                break;

            case 4:  // List Employees
                file = fopen(FILE_NAME, "rb");
                if (!file) { printf("Error!"); return 1; }
                while (fread(&emp, sizeof(Employee), 1, file)) {
                    printf("ID: %d, Name: %s, Age: %d, Salary: %.2f\n", emp.empId, emp.name, emp.age, emp.salary);
                }
                fclose(file);
                break;

            case 5:  // Delete Employee
                printf("Enter ID to delete: ");
                scanf("%d", &empId);
                file = fopen(FILE_NAME, "rb");
                if (!file) { printf("Error!"); return 1; }
                tempFile = fopen("temp.dat", "wb");
                if (!tempFile) { printf("Error!"); return 1; }
                found = 0;
                while (fread(&emp, sizeof(Employee), 1, file)) {
                    if (emp.empId != empId) fwrite(&emp, sizeof(Employee), 1, tempFile);
                    else found = 1;
                }
                if (!found) printf("Employee not found\n");
                fclose(file);
                fclose(tempFile);
                remove(FILE_NAME);
                rename("temp.dat", FILE_NAME);
                break;

            case 6: return 0;
            default: printf("Invalid choice\n");
        }
    }
}
